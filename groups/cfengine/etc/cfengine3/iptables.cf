bundle agent app_iptables
{
classes:
    "iptables_enabled" or => {"ks01", "ks02", "ks03"};

vars:
    iptables_enabled::
        "etc_iptables" string => "/etc/iptables.conf";
        "scanip_url" string => "http://www.openbl.org/lists/base_30days.txt.gz";
        "scanip_file" string => "/root/blacklist.txt.gz";
        "scanip_destination" string => "/root/blacklist.txt";

        "blacklist" slist => readstringlist(
                "$(scanip_destination)",
                "\s*#[^\n]*", "\n", 1000000, 1000000000);           

methods:
    iptables_enabled::
        "get_scanip" usebundle => download_tarball(
                "$(scanip_url)", "$(scanip_file)");

files:
    iptables_enabled::
        "$(scanip_destination)" create => "true", perms => promisemode("644");
        "$(scanip_file)"        create => "true", perms => promisemode("644");
        "$(etc_iptables)"       create => "true", perms => mog("0644", "root", "root");


commands:

    iptables_enabled.once_per_hour::
       "/bin/gunzip -f $(scanip_file)"
            comment => "Unrolling tarball to $(scanip_destination).";

    iptables_enabled::
        '/bin/sed -n "s/\(.*\)/-A INPUT -s \1 -j DROP/p" < $(scanip_destination) > $(etc_iptables)'
            contain => in_shell,
            action => if_elapsed("120");

#        "/sbin/iptables -A INPUT -s $(blacklist) -j LOG -m limit --limit 2/min --log-level 4 --log-prefix 'Iptable Drop: "
#            action => if_elapsed("120");

}


