bundle agent default
{
classes:
# Mise en place des groupes de machines
    "dns" or => { "dns01_acgform_local", "dns02_acgform_local" };
    "mysql" or => { "db01_acgform_local", "db02_acgform_local" };
    "backupmaster" or => { "backup01_acgform_local" };
    "loghost" or => { "log01_acgform_local" };

    "cfmaster" or => { "cf01_acgform_local" };


vars:
    any::
    "resolvconf"    string => "default/etc/resolv.conf" ;
    "etc"           string => "/etc";
    "usrlocalbin"   string => "/usr/local/bin";

methods:
#    backupmaster:: "makebackupmaster" usebundle => makebackupmaster;
    dns::          "makednsmaster"    usebundle => makednsmaster;

files:
    any::
        "/etc/resolv.conf"
        comment   => "copy $(globals.etc_src) to /etc",
                  perms     => promisemode("644"),
                  copy_from => secure_cp("$(globals.group_path)/$(resolvconf)","$(globals.serverhost)");
    "$(etc)"
        comment => "Test copying /etc",
                copy_from => secure_cp("$(globals.etc_src)","$(globals.serverhost)"),
                depth_search => recurse("inf");

     "/etc/ssh/ssh_host_dsa_key" perms => promisemode("600");
     "/etc/ssh/ssh_host_rsa_key" perms => promisemode("600");
     "/etc/sudoers"              perms => promisemode("440");
     "/etc/init.d"               perms => promisemode("755"), depth_search => recurse("inf");

    "$(usrlocalbin)"
        comment => "Test copying /usr/local/bin",
                copy_from => secure_cp("$(globals.usrlocalbin_src)","$(globals.serverhost)"),
                depth_search => recurse("inf");

    cfmaster::
        "/etc/default/cfengine3"
                  comment   => "copy default/cfengine3 to /etc",
                  perms     => promisemode("644"),
                  copy_from => secure_cp("$(globals.group_path)/groups/cfengine/etc/default/cfengine3","$(globals.serverhost)");
    loghost::
        "/etc/rsyslog.conf"
            comment   => "copy loghost/etc/rsyslog.conf to /etc",
            perms     => promisemode("644"),
            copy_from => secure_cp("$(globals.group_path)/groups/loghost/etc/rsyslog.conf","$(globals.serverhost)");

processes:
    any:: 
        "/usr/sbin/cf-execd" restart_class => "launchcfengine";
    drop01_acgform_local:: 
        "/home/remi/.dropbox-dist/dropbox" restart_class => "launchdropbox";

commands:
    launchcfengine::
        "/etc/init.d/cfengine3 start";
    launchdropbox::
        "/bin/su - remi -c \"/usr/bin/dropbox start\"";

reports:
    dns::       "I am a DNS";
    cfmaster::  "I am cfengine master";
    !cfmaster:: "I am cfengine slave";
    mysql::     "I am mysql";
    backupmaster::    "I am backup master";
    !backupmaster::    "I am backup client";

}

body perms promisemode(p)
{
    mode  => "$(p)";
}


bundle agent makebackupmaster {
vars:
    any::
        "bacula" slist => { "bacula-server" };

packages:
    any::
        "$(bacula)"
        comment => "install $(bacula)",
                package_policy   => "add",
                package_method   => generic;
}


bundle agent makednsmaster {
vars:
    any::
        "dnsfilestocopy"
        slist => { "/etc/bind/acgform.local", "/etc/bind/named.conf.local" };


        "dnsutils" slist => {
            "bind9",
                "host"
        };

files:
    "${dnsfilestocopy}"
          comment   => "copy $(globals.etc_src) to /etc",
          perms     => promisemode("644"),
          copy_from => secure_cp("/data/cf-repos/groups/dns/${dnsfilestocopy}","$(globals.serverhost)");

#    "/etc/bind/named.conf.local"
#          comment   => "copy $(globals.etc_src) to /etc",
#          perms     => promisemode("644"),
#          copy_from => secure_cp("/data/cf-repos/groups/dns/etc/bind/named.conf.local","$(globals.serverhost)");

packages:
    any::
        "$(dnsutils)"
        comment => "install $(dnsutils)",
                package_policy   => "add",
                package_method   => generic;
}

