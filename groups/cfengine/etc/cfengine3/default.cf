bundle agent default
{
classes:
# Classes locales au bundle:
      "handle_inittab" expression => fileexists("/etc/inittab");


vars:
    any::
        "dirstocopy"   slist  => { "/etc", "/usr/local/bin" };
        "mysqlsrcdirs" slist  => { "groups/db/etc/mysql", "hosts/$(sys.fqhost)/etc/mysql" };
        "torrentsrc" slist  => { "groups/torrent/etc/transmission-daemon/settings.json" };
        "timezone" string => "Europe/Paris";

        "myuser" string => "remi"; 
        "transmissionuser" string => "debian-transmission";
        

methods:
    any::
        "makecfengine"  usebundle => app_cfengine;
        "maketinc"  usebundle => app_tinc;
        "makersyslog"   usebundle => app_rsyslog;
        "makednsmaster" usebundle => app_dns;
        "makemonitoring" usebundle => app_monitor;
        "makegit"       usebundle => clone_git_repos;
        "iptables_handler" usebundle => app_iptables;

    btsync::
        "makebtsync"       usebundle => app_btsync;
    tinytinyrss::
        "makettrss" usebundle => app_ttrss;

files:
    any::
        "$(dirstocopy)"
            comment => "Copying $(dirstocopy)",
            handle => "file_default",
            copy_from => secure_cp("$(globals.group_path)/groups/default/$(dirstocopy)","$(globals.serverhost)"),
            depth_search => recurse("inf");

        "/etc/bash.bashrc"          perms => promisemode("644");
        "/etc/sudoers"              perms => promisemode("440");
        "/etc/gitattributes"        perms => promisemode("644");

    dlnaserver::
        "/etc/minidlna.conf"
            handle => "file_minidlna",
            perms => mog("0644","minidlna","minidlna"),
            classes => if_repaired("restart_minidlna");


    torrentserver::
        "/etc/transmission-daemon"
            handle => "file_transmission_directory",
             perms => mog("0755","${transmissionuser}","${transmissionuser}");

        "/home/Downloads/"
            perms => mog("0755","${transmissionuser}","${transmissionuser}"),
            create =>  "true";

        "/home/Incomplete/"
            perms => mog("0755","${transmissionuser}","${transmissionuser}"),
            create =>  "true";

    torrentserver.transmission_stopped::
        "/etc/transmission-daemon/settings.json"
            handle => "file_transmission",
            copy_from => secure_cp("$(globals.group_path)/$(torrentsrc)","$(globals.serverhost)"),
            classes => if_repaired("starttransmission"),
            perms => mog("0644","${transmissionuser}","${transmissionuser}");



    debian::
        "/etc/timezone"     
            handle => "file_timezone",
            edit_line => replace_or_add("Etc/UTC","$(timezone)");

        "/etc/localtime"  
            handle => "file_localtime",
            link_from => ln_s("/usr/share/zoneinfo/$(timezone)"),
            move_obstructions => "true";

    debian.handle_inittab::
        "/etc/inittab"
            handle => "file_inittab",
            edit_line => comment_lines_matching(
                    "[2-6]:23:respawn:/sbin/getty [0-9]* tty.*", "#");

    any::
        "$(dirstocopy)"
            comment => "Copying $(dirstocopy)",
            copy_from => secure_cp("$(globals.group_path)/hosts/${sys.fqhost}/$(dirstocopy)","$(globals.serverhost)"),
            depth_search => recurse("inf");

    wxz_local::
        "$(dirstocopy)"
            comment => "Copying $(dirstocopy)",
            copy_from => secure_cp("$(globals.group_path)/groups/wxz_local/$(dirstocopy)","$(globals.serverhost)"),
            depth_search => recurse("inf");


    mysql::
        "/etc/mysql"
            handle => "file_mysql",
            comment => "Copying files in /etc/mysql",
            perms     => promisemode("600"),
            copy_from => secure_cp("$(globals.group_path)/$(mysqlsrcdirs)","$(globals.serverhost)"),
            depth_search => recurse("inf");


processes:
    dropbox:: 
        "/home/${myuser}/.dropbox-dist/dropbox" restart_class => "launchdropbox";

commands:
    launchdropbox::
        "/bin/su - ${myuser} -c \"/usr/bin/dropbox start\"";

    starttransmission::
        "/etc/init.d/transmission-daemon start";
    stoptransmission::
        "/etc/init.d/transmission-daemon stop";

    restart_minidlna::
        "/etc/init.d/minidlna restart";



}

bundle agent manage_users {
vars:
    "users" slist => { "remi" };
    "groups_remi" slist => {"remi", "admin", "sudo"};

classes:
      "adduser_$(users)" not => userexists("$(users)");

commands:
    any::
        "/usr/sbin/adduser $(users) "
            action => if_elapsed("60"),                                         
            ifvarclass => "adduser_$(users)"; 

        "/usr/sbin/usermod -a -G $(groups_remi) remi"
            action => if_elapsed("60");                           


}

