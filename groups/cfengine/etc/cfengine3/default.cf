bundle agent default
{
classes:
# Classes locales au bundle:
      "handle_inittab" expression => fileexists("/etc/inittab");


vars:
    any::
        "dirstocopy"   slist  => { "/etc", "/usr/local/bin" };
        "mysqlsrcdirs" slist  => { "groups/db/etc/mysql", "hosts/$(sys.fqhost)/etc/mysql" };

        "timezone" string => "Europe/Paris";

        "myuser" string => "remi"; 
        

methods:
    any::
        "makecfengine"  usebundle => app_cfengine;
        "makegit"       usebundle => clone_git_repos;

files:
    any::
        "$(dirstocopy)"
            comment => "Copying $(dirstocopy)",
            handle => "file_default",
            copy_from => secure_cp("$(globals.group_path)/groups/default/$(dirstocopy)","$(globals.serverhost)"),
            depth_search => recurse("inf");

        "/etc/bash.bashrc"          perms => promisemode("644");
        "/etc/sudoers"              perms => promisemode("440");
        "/etc/gitattributes"        perms => promisemode("644");

    debian::
        "/etc/timezone"     
            handle => "file_timezone",
            edit_line => replace_or_add("Etc/UTC","$(timezone)");

        "/etc/localtime"  
            handle => "file_localtime",
            link_from => ln_s("/usr/share/zoneinfo/$(timezone)"),
            move_obstructions => "true";

    debian.handle_inittab::
        "/etc/inittab"
            handle => "file_inittab",
            edit_line => comment_lines_matching(
                    "[2-6]:23:respawn:/sbin/getty [0-9]* tty.*", "#");

    any::
        "$(dirstocopy)"
            comment => "Copying $(dirstocopy)",
            copy_from => secure_cp("$(globals.group_path)/hosts/${sys.fqhost}/$(dirstocopy)","$(globals.serverhost)"),
            depth_search => recurse("inf");

    wxz_local::
        "$(dirstocopy)"
            comment => "Copying $(dirstocopy)",
            copy_from => secure_cp("$(globals.group_path)/groups/wxz_local/$(dirstocopy)","$(globals.serverhost)"),
            depth_search => recurse("inf");
}

bundle agent manage_users {
vars:
    "users" slist => { "remi" };
    "groups_remi" slist => {"remi", "admin", "sudo"};

classes:
      "adduser_$(users)" not => userexists("$(users)");

commands:
    any::
        "/usr/sbin/adduser $(users) "
            action => if_elapsed("600"),                                         
            ifvarclass => "adduser_$(users)"; 

        "/usr/sbin/usermod -a -G $(groups_remi) remi"
            action => if_elapsed("600");                           

}

