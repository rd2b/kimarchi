bundle agent default
{
classes:
# Classes locales au bundle:
      "handle_inittab" expression => fileexists("/etc/inittab");

vars:
    any::
        "dirstocopy"   slist  => { "/etc", "/usr/local/bin" };
        "mysqlsrcdirs" slist  => { "groups/db/etc/mysql", "hosts/$(sys.fqhost)/etc/mysql" };
        "torrentsrc" slist  => { "groups/torrent/etc/transmission-daemon/settings.json" };
        "timezone" string => "Europe/Paris";
        "scanip_url" string => "http://www.openbl.org/lists/base.txt.gz";
        "scanip_file" string => "/root/blacklist.txt.gz";
        "scanip_destination" string => "/root/blacklist.txt";


        "myuser" string => "remi"; 
        "transmissionuser" string => "debian-transmission";
        
        "blacklist" slist => readstringlist(                                          
                "$(scanip_destination)", "\s*#[^\n]*", "\n", 1000000, 1000000000);           

    btsync::
        "btsync_tarball" string => "/root/btsync_xxx.tar.gz";
    btsync.linux_x86_64::
        "btsync_url" string => "http://btsync.s3-website-us-east-1.amazonaws.com/btsync_x64.tar.gz";
    btsync.linux_armv6l::
        "btsync_url" string => "http://btsync.s3-website-us-east-1.amazonaws.com/btsync_arm.tar.gz";



methods:
    any::
        "makecfengine"  usebundle => app_cfengine;
        "makersyslog"   usebundle => app_rsyslog;
        "makednsmaster" usebundle => app_dns;
        "makemonitoring" usebundle => app_monitor;
        "makegit"       usebundle => clone_git_repos;

    !laptop::
        "get_scanip" usebundle => download_tarball(
                "$(scanip_url)", "$(scanip_file)");  

    backupmaster|backupclient::
        "makebackup"    usebundle => app_bacula;

    tinytinyrss::
        "makettrss" usebundle => app_ttrss;

    btsync::
        "get_btsync" usebundle => download_tarball(
                "$(btsync_url)", "$(btsync_tarball)");  

files:
    any::
        "$(dirstocopy)"
            comment => "Copying $(dirstocopy)",
            handle => "file_default",
            copy_from => secure_cp("$(globals.group_path)/groups/default/$(dirstocopy)","$(globals.serverhost)"),
            depth_search => recurse("inf");

        "/etc/bash.bashrc"          perms => promisemode("644");
        "/etc/sudoers"              perms => promisemode("440");
        "/etc/gitattributes"        perms => promisemode("644");
        "$(scanip_destination)"     perms => promisemode("644");

    dlnaserver::
        "/etc/minidlna.conf"
            handle => "file_minidlna",
            perms => mog("0644","minidlna","minidlna"),
            classes => if_repaired("restart_minidlna");


    torrentserver::
        "/etc/transmission-daemon"
            handle => "file_transmission_directory",
             perms => mog("0755","${transmissionuser}","${transmissionuser}");

        "/home/Downloads/"
            perms => mog("0755","${transmissionuser}","${transmissionuser}"),
            create =>  "true";

        "/home/Incomplete/"
            perms => mog("0755","${transmissionuser}","${transmissionuser}"),
            create =>  "true";

    torrentserver.transmission_stopped::
        "/etc/transmission-daemon/settings.json"
            handle => "file_transmission",
            copy_from => secure_cp("$(globals.group_path)/$(torrentsrc)","$(globals.serverhost)"),
            classes => if_repaired("starttransmission"),
            perms => mog("0644","${transmissionuser}","${transmissionuser}");



    debian::
        "/etc/timezone"     
            handle => "file_timezone",
            edit_line => replace_or_add("Etc/UTC","$(timezone)");

        "/etc/localtime"  
            handle => "file_localtime",
            link_from => ln_s("/usr/share/zoneinfo/$(timezone)"),
            move_obstructions => "true";

    debian.handle_inittab::
        "/etc/inittab"
            handle => "file_inittab",
            edit_line => comment_lines_matching(
                    "[2-6]:23:respawn:/sbin/getty [0-9]* tty.*", "#");

    any::
        "$(dirstocopy)"
            comment => "Copying $(dirstocopy)",
            copy_from => secure_cp("$(globals.group_path)/hosts/${sys.fqhost}/$(dirstocopy)","$(globals.serverhost)"),
            depth_search => recurse("inf");

    mysql::
        "/etc/mysql"
            handle => "file_mysql",
            comment => "Copying files in /etc/mysql",
            perms     => promisemode("600"),
            copy_from => secure_cp("$(globals.group_path)/$(mysqlsrcdirs)","$(globals.serverhost)"),
            depth_search => recurse("inf");


processes:
    dropbox:: 
        "/home/${myuser}/.dropbox-dist/dropbox" restart_class => "launchdropbox";

    torrentserver::
        "/usr/bin/transmission-daemon" restart_class => "transmission_stopped";

commands:
    launchdropbox::
        "/bin/su - ${myuser} -c \"/usr/bin/dropbox start\"";

    starttransmission::
        "/etc/init.d/transmission-daemon start";
    stoptransmission::
        "/etc/init.d/transmission-daemon stop";

    restart_minidlna::
        "/etc/init.d/minidlna restart";

    any::
    "/bin/gunzip -f $(scanip_file)"
        action => if_elapsed("120"),
        comment => "Unrolling tarball to $(scanip_destination).";

    ks01|ks02|ks03::
        "/sbin/iptables -A INPUT -s $(blacklist) -j LOG --limit 2/min --log-level 4 --log-prefix 'Iptable Drop: "
            action => if_elapsed("120");

        "/sbin/iptables -A INPUT -s $(blacklist) -j DROP"
            action => if_elapsed("120");

reports:
    mysql::
        "I am mysql";

}


