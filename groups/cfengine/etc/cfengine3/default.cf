bundle agent default
{
classes:
# Mise en place des groupes de machines
    "dns" or => { "dns01_acgform_local", "dns02_acgform_local" };
    "mysql" or => { "db01_acgform_local", "db02_acgform_local" };
    "backupmaster" or => { "backup01_acgform_local" };
    "loghost" or => { "log01_acgform_local" };

    "cfmaster" or => { "cf01_acgform_local" };


vars:
    any::
        "filestocopy" slist => { "/etc/resolv.conf" };
        "dirstocopy"  slist => { "/etc", "/usr/local/bin" };
        "mysqlsrcdirs"  slist => { "groups/db/etc/mysql", "hosts/$(sys.fqhost)/etc/mysql" };

methods:
#    backupmaster:: "makebackupmaster" usebundle => makebackupmaster;
    globals.dns::          "makednsmaster"    usebundle => makednsmaster;

files:
    any::
        "$(filestocopy)"
            comment   => "Copying $(filestocopy)",
            perms     => promisemode("644"),
            copy_from => secure_cp("$(globals.group_path)/groups/default/$(filestocopy)","$(globals.serverhost)");

        "$(dirstocopy)"
            comment => "Copying $(dirstocopy)",
            copy_from => secure_cp("$(globals.group_path)/groups/default/$(dirstocopy)","$(globals.serverhost)"),
            depth_search => recurse("inf");

         "/etc/ssh/ssh_host_dsa_key" perms => promisemode("600");
         "/etc/ssh/ssh_host_rsa_key" perms => promisemode("600");
         "/etc/sudoers"              perms => promisemode("440");
         "/etc/init.d"               perms => promisemode("755"), depth_search => recurse("inf");

    globals.cfmaster::
        "/etc/default/cfengine3"
                  comment   => "copy default/cfengine3 to /etc",
                  perms     => promisemode("644"),
                  copy_from => secure_cp("$(globals.group_path)/groups/cfengine/etc/default/cfengine3","$(globals.serverhost)");
    globals.loghost::
        "/etc/rsyslog.conf"
            comment   => "copy loghost/etc/rsyslog.conf to /etc",
            perms     => promisemode("644"),
            copy_from => secure_cp("$(globals.group_path)/groups/loghost/etc/rsyslog.conf","$(globals.serverhost)");

    globals.mysql::
        "/etc/mysql"
            comment => "Copying files in /etc/mysql",
            perms     => promisemode("600"),
            copy_from => secure_cp("$(globals.group_path)/$(mysqlsrcdirs)","$(globals.serverhost)"),
            depth_search => recurse("inf");


processes:
    any:: 
        "/usr/sbin/cf-execd" restart_class => "launchcfengine";
    drop01_acgform_local:: 
        "/home/remi/.dropbox-dist/dropbox" restart_class => "launchdropbox";

commands:
    launchcfengine::
        "/etc/init.d/cfengine3 start";
    launchdropbox::
        "/bin/su - remi -c \"/usr/bin/dropbox start\"";

reports:
    dns::       "I am a DNS";
    globals.cfmaster::  "I am cfengine master";
    !globals.cfmaster:: "I am cfengine slave";
    globals.mysql::     "I am mysql";
    globals.backupmaster::    "I am backup master";
    !globals.backupmaster::    "I am backup client";

}

body perms promisemode(p)
{
    mode  => "$(p)";
}


bundle agent makebackupmaster {
vars:
    any::
        "bacula" slist => { "bacula-server" };

packages:
    any::
        "$(bacula)"
        comment => "install $(bacula)",
                package_policy   => "add",
                package_method   => generic;
}


bundle agent makednsmaster {
vars:
    any::
        "dnsfilestocopy"
            slist => { "/etc/bind/acgform.local", "/etc/bind/named.conf.local" };

        "dnsutils" slist => { "bind9", "host" };

files:
    "$(dnsfilestocopy)"
          comment   => "copy $(dnsfilestocopy) to /etc",
          perms     => promisemode("644"),
          copy_from => secure_cp("/data/cf-repos/groups/dns/$(dnsfilestocopy)","$(globals.serverhost)");

packages:
    any::
        "$(dnsutils)"
        comment => "install $(dnsutils)",
                package_policy   => "add",
                package_method   => generic;
}

