bundle agent clone_git_repos {
vars:
    cfmanual|cfmaster::
        "git_monitor[cfexternals][0]" string => "https://github.com/rd2b/monitor.git";

    CFgit::
        "username" string => "remi";
        "git_repos_base" string => "/home/$(username)/repositories/";

        "git_repos[kimarchi][0]" string => "git@github.com:rd2b/kimarchi.git";
        "git_repos[github][1]" string => "git@github.com:rd2b/config.git";


        "projects"  slist => getindices("git_repos");

methods:
    CFgit::
        "placeholder" usebundle => clone_git_repos_project(
                "$(git_repos_base)/$(projects)", 
                "clone_git_repos.git_repos[$(projects)]",
                "$(username)");

    cfmanual|cfmaster::
        "placeholder" usebundle => clone_git_repos_project(
                "/data/cfexternals",
                "clone_git_repos.git_monitor[cfexternals]",
                "root" );
}

bundle agent clone_git_repos_project(basepath, repos, user) {
vars:

    "repos_keys" slist => getindices("$(repos)");

    "repo_data[$(repos_keys)][dirname]" string => execresult(
            "/usr/bin/basename $($(repos)[$(repos_keys)]) .git", "noshell");

classes:
    "repo_dir_exists_$(repos_keys)" expression => isdir(
            "$(basepath)/$(repo_data[$(repos_keys)][dirname])");

files:
    "$(basepath)/."
        create => "true",
               perms => owner("$(user)");

    "$(basepath)/$(repo_data[$(repos_keys)][dirname])/."
        perms => owner("$(user)");

    "$(basepath)/$(repo_data[$(repos_keys)][dirname])"
        depth_search => recurse("inf"),
                     perms => owner("$(user)");


commands:
    "/usr/bin/git clone $($(repos)[$(repos_keys)])"
        contain => in_dir_and_setuid_sh("$(basepath)", "$(user)"),
                ifvarclass => "!repo_dir_exists_$(repos_keys)";
}
