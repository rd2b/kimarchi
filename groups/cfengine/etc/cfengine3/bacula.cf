bundle agent makebackup {
vars:
    backupmaster::
        "baculaserverpackages" slist => { "bacula-server" };
        "serverClientTemplate" string => "/etc/bacula/templates/TEMPLATE_CLIENT";
        "clientpassword"       string => "HyFo__BaxZGn0IH4uJdzIY_SHnpfqOEYD";

        "serverfilestocopy" slist => { 
            "/etc/bacula/bacula-dir.conf",
            "/etc/bacula/bacula-sd.conf",
            "$(serverClientTemplate)"
        };

        "serverdirstocopy" slist => { 
            "/etc/bacula/clients",
            "/etc/bacula/filesets"
        };

        "clients[host.domain]"   string => "standard";
        "clients[host2.domain2]" string => "standard";

        "serverclientlist" slist => getindices("clients");

    backupclient::
        "baculaclientpackages" slist => { "bacula-fd" };
        "clientfilestocopy" slist => { 
            "/etc/bacula/bacula-fd.conf"
        };


packages:
    backupmaster::
        "$(baculaserverpackages)"
        comment => "install $(baculaserverpackages)",
                package_policy   => "add",
                package_method   => generic;

    backupclient::
        "$(baculaclientpackages)"
        comment => "install $(baculaclientpackages)",
                package_policy   => "add",
                package_method   => generic;

files:
    backupmaster::
        "$(serverfilestocopy)"
           comment   => "Copying $(serverfilestocopy)",
           perms     => promisemode("644"),
           copy_from => secure_cp("$(globals.group_path)/groups/backup/$(serverfilestocopy)","$(globals.serverhost)");

        "$(serverdirstocopy)"
            comment => "Copying $(serverdirstocopy)",
            copy_from => secure_cp("$(globals.group_path)/groups/backup/$(serverdirstocopy)","$(globals.serverhost)"),
            depth_search => recurse("inf");

        "/etc/bacula/clients/$(serverclientlist).conf"
            create => "true",
            perms     => promisemode("644"),
            edit_defaults => empty,
            edit_line => do_baculafd(
                    "$(serverclientlist)",
                    "$(clients[$(serverclientlist)])", 
                    "$(clientpassword)"),
            comment => "Configuring the client file /etc/bacula/clients/$(serverclientlist).conf";


    backupclient::
        "$(clientfilestocopy)"
           comment   => "Copying $(clientfilestocopy)",
           perms     => promisemode("644"),
           copy_from => secure_cp("$(globals.group_path)/groups/backup/$(clientfilestocopy)","$(globals.serverhost)");

}

#######################################################
# Configure the Client file
# Setting the client name value
# Adding a header to tell the file is configured by Cfengine
#######################################################
bundle edit_line do_baculafd(clientname, clientjob, password) {
insert_lines:
"#############################################################
### This file is configured by Cfengine.
### Manually editing the file might lead Cfengine
### to change back its content
#############################################################
Job {
    Name = \"Job-$(clientname)\"
    JobDefs = \"$(clientjob)\"
    Client = $(clientname)-fd
}
     
# Client (File Services) to backup
Client {
    Name = $(clientname)-fd
    Address = $(clientname)
    FDPort = 9102
    Catalog = MyCatalog
    Password = \"$(password)\"          # password for FileDaemon
    File Retention = 30 days            # 30 days
    Job Retention = 6 months            # six months
    AutoPrune = yes                     # Prune expired Jobs/Files
}
";
}

