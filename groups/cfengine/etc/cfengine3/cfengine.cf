bundle agent app_cfengine
{
vars:
    "masterfilesrcdir" string => "$(globals.group_path)/groups/cfengine/etc/cfengine3/";

    ubuntu|debian::
        "defaultdirfile" string => "$(globals.group_path)/groups/cfengine/etc/default/";

    (ubuntu|debian).cfmaster::
        "defaultsrcfile" string => "$(defaultdirfile)/cfengine3-master";
        "defaultcfengineopt" slist => { 
            "RUN_CFMONITORD=1", "RUN_CFSERVERD=1", "RUN_CFEXECD=1" };

    (ubuntu|debian).cfmanual::
        "defaultsrcfile" string => "$(defaultdirfile)/cfengine3-manual";
        "defaultcfengineopt" slist => { 
            "RUN_CFMONITORD=0", "RUN_CFSERVERD=1", "RUN_CFEXECD=0" };
    
    (ubuntu|debian).!cfmaster.!cfmanual::
        "defaultsrcfile" string => "$(defaultdirfile)/cfengine3-client";
        "defaultcfengineopt" slist => { 
            "RUN_CFMONITORD=0", "RUN_CFSERVERD=0", "RUN_CFEXECD=1" };

    ubuntu|debian::
        "master_location"   string => "/var/lib/cfengine3/masterfiles";
    
    redhat::
        "master_location"   string => "/var/cfengine/masterfiles";              

files:
    (ubuntu|debian)::
        "/etc/default/cfengine3"
            comment   => "Editing default/cfengine3 to /etc",
            perms     => promisemode("644"),
            create =>  "true",
            edit_line => append_if_no_lines( "${defaultcfengineopt}"),
            classes => if_repaired("restartcfengine");


    (ubuntu|debian|redhat).(cfmaster|cfmanual)::
        "$(master_location)"
        comment => "Updating masterfiles",
        copy_from => secure_cp("$(masterfilesrcdir)","$(globals.serverhost)"),
        file_select => by_name(".*.cf"),
        depth_search => recurse("inf");

        "$(master_location)/bacula.cf"
        comment => "Updating masterfiles",
        copy_from => secure_cp("/data/cfexternals/cfenginebacula/bacula.cf","$(globals.serverhost)"),
        file_select => by_name(".*.cf");

processes:
    !cfmanual:: 
        "/usr/sbin/cf-execd" restart_class => "startcfexecd";

    cfmaster|cfmanual::
        "/usr/sbin/cf-serverd" restart_class => "startcfserverd";

commands:
    restartcfengine.(ubuntu|debian)::
        "/etc/init.d/cfengine3 start";

    startcfexecd.(ubuntu|debian)::
        "/etc/init.d/cfengine3 start";

    startcfexecd.redhat::
        "/etc/init.d/cf-execd start";

    startcfserverd.redhat::
        "/etc/init.d/cf-serverd start";

reports:
    cfmaster::
        "I am cfengine master";
    cfmanual::
        "I am standalone master";
    !cfmaster.!cfmanual::
        "I am cfengine slave";

}

